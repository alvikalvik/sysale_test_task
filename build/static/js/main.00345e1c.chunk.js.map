{"version":3,"sources":["components/common/Button/Button.jsx","components/common/ComparationLabel/ComparationLabel.jsx","components/common/NewLabel/NewLabel.jsx","components/common/OnePlusOneLabel/OnePlusOneLabel.jsx","components/Goods/GoodsCount.jsx","components/Goods/GoodsImg.jsx","components/Goods/GoodsVolume.jsx","components/Goods/GoodsColor.jsx","components/Goods/GoodsItem.jsx","components/Goods/Goods.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledButton","styled","button","Button","props","children","StyledComparationLabel","div","InComparation","ComparationLabel","onClick","handleClick","isInComparation","inComparationCount","StyledNewLable","NewLabel","StyledOnePlusOneLabel","OnePlusOneLabel","CountWrapper","CountButton","CountText","GoodsCount","id","count","maxCount","setItemCount","disabled","ImgWrapper","GoodsImg","useState","isMouseOver","setIsMouseOver","src","hidedSrc","alt","onMouseOver","onMouseLeave","VolumeWrapper","VolumeItem","VolumeItemIndicator","VolumeItemIndicatorChecked","VolumeItemText","GoodsVolume","volumeItems","availableVolumes","map","item","i","setItemVolume","volume","GoodsColorWrapper","GoodsColorTitle","GoodsColorTitleDown","GoodsColorItems","GoodsColorItem","GoodsColor","itemData","isColorsVisible","setIsColorsVisible","GoodsColorItemList","availableColors","setItemColor","color","GoodsLi","li","GoodsTitle","h3","GoodsDescr","GoodsColorPriceWrapper","GoodsPrice","CountButtonWrapper","NewLabelWrapper","OnePlusOneLabelWrapper","ComparationLabelWrapper","GoodsItem","price","prices","img","title","hidedImg","description","isNew","isOnePlusOne","toggleIsInComparation","GoodsWrapper","GoodsList","ul","Goods","goods","setGoods","reduce","accumulator","state","goodsItems","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00345e1c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n    display: block;\r\n    width: 309px;\r\n    height: 39px;   \r\n    background: linear-gradient(261.65deg, #EFBB37 -3.95%, #CF9E1F 109.44%);\r\n    border-radius: 30px;\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    text-transform: uppercase;  \r\n    color: #FFFFFF;\r\n    outline: none;   \r\n    border:none;\r\n    cursor: pointer;\r\n    transition: filter 0.6s, background 0.6s;\r\n    &:hover {\r\n        background: linear-gradient(261.65deg, #E9B32C -3.95%, #BF911A 109.44%);\r\n        filter: drop-shadow(0px 0px 20px #E8CB80);\r\n    }\r\n    &:active {\r\n        background: linear-gradient(261.65deg, #FFD773 -3.95%, #E2B645 109.44%);\r\n        filter: drop-shadow(0px 0px 20px #E8CB80);\r\n    }\r\n`;\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <StyledButton>{props.children}</StyledButton>\r\n    );\r\n}\r\n\r\nexport default Button;","import styled from \"styled-components\";\r\n\r\nconst StyledComparationLabel = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 46px;\r\n    height: 46px;\r\n    background-color: #FFFFFF;\r\n    background-image: url('img/copmare-icon.svg');\r\n    background-position: center center;\r\n    background-repeat: no-repeat;\r\n    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: #F9FAFC;\r\n    }    \r\n    &:active {\r\n        background-image: url('img/compare-icon-clicked.svg');\r\n    }    \r\n`;\r\n\r\nconst InComparation = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    top: 0;\r\n    right: 0;\r\n    width: 14px;\r\n    height: 14px;\r\n    border-radius: 50%;\r\n    background-color: #F64B33;\r\n    font-weight: 500;\r\n    font-size: 9px;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst ComparationLabel = (props) => { \r\n    const handleClick = () => {\r\n        props.handleClick();\r\n    };\r\n    return (\r\n        <StyledComparationLabel\r\n            onClick={handleClick}\r\n        >\r\n            {props.children}\r\n            {props.isInComparation\r\n                ? <InComparation>{props.inComparationCount}</InComparation>\r\n                : null\r\n            }            \r\n        </StyledComparationLabel>\r\n    );\r\n}\r\n\r\nexport default ComparationLabel;","import styled from \"styled-components\";\r\n\r\nconst StyledNewLable = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 73px;\r\n    height: 26px;\r\n    background: linear-gradient(261.65deg, #EFBB37 -3.95%, #CF9E1F 109.44%);\r\n    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);\r\n    border-radius: 30px;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    text-transform: uppercase;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst NewLabel = (props) => {\r\n    return (\r\n        <StyledNewLable>{props.children}</StyledNewLable>\r\n    );\r\n}\r\n\r\nexport default NewLabel;","import styled from \"styled-components\";\r\n\r\nconst StyledOnePlusOneLabel = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 73px;\r\n    height: 26px;\r\n    background: linear-gradient(263.57deg, #003466 -5.31%, #3383D0 113.07%);\r\n    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);    \r\n    border-radius: 30px;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    text-transform: uppercase;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst OnePlusOneLabel = (props) => {\r\n    return (\r\n        <StyledOnePlusOneLabel>{props.children}</StyledOnePlusOneLabel>\r\n    );\r\n}\r\n\r\nexport default OnePlusOneLabel;","import styled from \"styled-components\";\r\n\r\nconst CountWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-right: 32px;\r\n    width: 94px;\r\n    height: 39px;\r\n    background: #E2E9F0;\r\n    border-radius: 30px;\r\n    flex-shrink: 0;\r\n    font-weight: normal;\r\n    line-height: 39px;\r\n    font-size: 20px;\r\n    color: #2C2C2C;\r\n`;\r\n\r\nconst CountButton = styled.button`\r\n    display: block;\r\n    width: 38px;\r\n    height: 38px;    \r\n    outline: none;\r\n    border: none;\r\n    background-color: transparent;\r\n    font-size: 18px;\r\n    font-weight: 400;\r\n    text-align: center;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CountText = styled.div`\r\n    margin: 0 5px;\r\n`;\r\n\r\nconst GoodsCount = (props) => {\r\n    const {id, count, maxCount, setItemCount} = props;\r\n\r\n    const handleMinusClick = () => {\r\n        if (count <= 1) {\r\n            return null;\r\n        }\r\n\r\n        setItemCount(id, count - 1)\r\n    }\r\n\r\n    const handlePlusClick = () => {\r\n        if (count >= maxCount) {\r\n            return null;\r\n        }\r\n\r\n        setItemCount(id, count + 1)\r\n    }\r\n\r\n    return (\r\n        <CountWrapper>\r\n            <CountButton\r\n                onClick={handleMinusClick}\r\n                disabled={count <= 1}\r\n            >-</CountButton>\r\n            <CountText>{count}</CountText>               \r\n            <CountButton\r\n                onClick={handlePlusClick}\r\n                disabled={count >= maxCount}\r\n            >+</CountButton>         \r\n        </CountWrapper>\r\n    );\r\n}\r\n\r\nexport default GoodsCount;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ImgWrapper = styled.div`\r\n    margin: 0 auto;\r\n    width: 256px;\r\n    background-color:#FFFFFF;\r\n    border-radius: 25px;\r\n    overflow: hidden;\r\n    height: 261px;\r\n    img {\r\n        display: block;\r\n        margin: 0 auto;\r\n        height: 100%;\r\n        max-width: 100%;\r\n        object-fit: contain;\r\n        transition: transform 0.6s;               \r\n    }\r\n`;\r\n\r\nconst GoodsImg = (props) => {\r\n    const [isMouseOver, setIsMouseOver] = useState(false);\r\n\r\n    const handleMouseOver = () => {\r\n        setIsMouseOver(true);\r\n    }\r\n\r\n    const handleMouseLeave = () => {\r\n        setIsMouseOver(false);\r\n    }\r\n\r\n    return (        \r\n        <ImgWrapper>\r\n            <img\r\n                src={\r\n                    isMouseOver\r\n                        ? props.hidedSrc || props.src\r\n                        : props.src\r\n                }\r\n                alt={props.alt}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseLeave={handleMouseLeave}\r\n            />        \r\n        </ImgWrapper>\r\n    );\r\n}\r\n\r\nexport default GoodsImg;","import styled from \"styled-components\";\r\n\r\nconst VolumeWrapper = styled.div`\r\n    margin-top: 13px;\r\n`;\r\n\r\nconst VolumeItem = styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 2px 22px;\r\n    cursor: pointer;\r\n    transition: filter 0.6s;\r\n    &:hover {\r\n        filter: brightness(1.05);\r\n    }\r\n`;\r\n\r\nconst VolumeItemIndicator = styled.div`\r\n    width: 23px;\r\n    height: 23px;\r\n    margin-right: 13px;\r\n    background-color: #DEDEDE;\r\n    border-radius: 5px;    \r\n`;\r\n\r\nconst VolumeItemIndicatorChecked = styled(VolumeItemIndicator)`\r\n    border: 3px solid #DEDEDE;\r\n    background: linear-gradient(261.65deg, #EFBB37 -3.95%, #CF9E1F 109.44%);   \r\n`;\r\n\r\nconst VolumeItemText = styled.div`\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    line-height: 23px;\r\n    color: #000000;\r\n`;\r\n\r\n\r\nconst GoodsVolume = (props) => {    \r\n\r\n    const volumeItems = props.availableVolumes.map( (item,i) => {\r\n        return (\r\n            <VolumeItem\r\n                key={i}\r\n                onClick={() => props.setItemVolume(props.id, item)}\r\n            >\r\n                {props.volume === item\r\n                    ? <VolumeItemIndicatorChecked />\r\n                    : <VolumeItemIndicator />\r\n                }                \r\n                <VolumeItemText>{item} мл</VolumeItemText>\r\n            </VolumeItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <VolumeWrapper>\r\n            {volumeItems}            \r\n        </VolumeWrapper>\r\n    );\r\n}\r\n\r\nexport default GoodsVolume;","import styled from \"styled-components\";\r\n\r\nconst GoodsColorWrapper = styled.div`\r\n    padding: 2px 0;\r\n    width: 264px;\r\n    min-height: 30px;\r\n    max-height: 124px;\r\n    background-color: #FFFFFF;\r\n    border-radius: 30px; \r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    color: #2C2C2C;\r\n    overflow: hidden;    \r\n`;\r\n\r\nconst GoodsColorTitle = styled.div`\r\n    position: relative;\r\n    padding: 0 20px;    \r\n    height: 24px; \r\n    line-height: 24px;\r\n    cursor: pointer;\r\n    &:after {\r\n        position: absolute;\r\n        top: 50%;\r\n        right: 20px; \r\n        content: '';\r\n        width: 6px;\r\n        height: 6px;\r\n        border-left: 2px solid #2C2C2C;\r\n        border-top: 2px solid #2C2C2C;\r\n        transform: rotate(-135deg) translateY(50%);\r\n        transition: transform 0.6s;\r\n    }\r\n`;\r\n\r\nconst GoodsColorTitleDown = styled(GoodsColorTitle)`\r\n    &:after {       \r\n        transform: rotate(45deg) translateY(-50%);\r\n    }\r\n`;\r\n\r\nconst GoodsColorItems = styled.div`\r\n    max-height: 96px;\r\n    overflow-y: scroll;\r\n    scrollbar-color: #E0E9F2 #f9f9fd;\r\n    scrollbar-width: 5px;\r\n    &::-webkit-scrollbar {\r\n        width: 3px;\r\n        background-color: #f9f9fd;\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 3px;\r\n        background-color: #E0E9F2;\r\n    }\r\n\r\n    &::-webkit-scrollbar-track {        \r\n        border-radius: 15px;\r\n        background-color: #f9f9fd;\r\n    }\r\n`;\r\n\r\nconst GoodsColorItem = styled.div`\r\n    padding: 0 20px;   \r\n    margin-top: 6px;\r\n    height: 24px; \r\n    line-height: 24px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst GoodsColor = (props) => {    \r\n    const {itemData, isColorsVisible, setIsColorsVisible} = props;    \r\n    const GoodsColorItemList = itemData.availableColors.map(\r\n        (item, i) => {\r\n            return (\r\n                <GoodsColorItem\r\n                    key={i}\r\n                    onClick={() => props.setItemColor(itemData.id ,item)}\r\n                >\r\n                    {item}\r\n                </GoodsColorItem>\r\n            );\r\n        }\r\n    ); \r\n    return (\r\n        <GoodsColorWrapper>\r\n            {isColorsVisible\r\n                ? <GoodsColorTitleDown                       \r\n                    onClick={() => {\r\n                        setIsColorsVisible(!isColorsVisible);\r\n                    }}\r\n                    >{itemData.color}</GoodsColorTitleDown>\r\n                : <GoodsColorTitle                        \r\n                    onClick={() => {\r\n                        setIsColorsVisible(!isColorsVisible);\r\n                    }}\r\n                    >{itemData.color}</GoodsColorTitle>\r\n            }\r\n            {isColorsVisible\r\n                ? <GoodsColorItems>\r\n                    {GoodsColorItemList}\r\n                  </GoodsColorItems>\r\n                : null\r\n            }\r\n        </GoodsColorWrapper>        \r\n    );\r\n}\r\n\r\nexport default GoodsColor;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../common/Button/Button\";\r\nimport ComparationLabel from \"../common/ComparationLabel/ComparationLabel\";\r\nimport NewLabel from \"../common/NewLabel/NewLabel\";\r\nimport OnePlusOneLabel from \"../common/OnePlusOneLabel/OnePlusOneLabel\";\r\nimport GoodsCount from \"./GoodsCount\";\r\nimport GoodsImg from \"./GoodsImg\";\r\nimport GoodsVolume from \"./GoodsVolume\";\r\nimport { ImgWrapper } from \"./GoodsImg\"\r\nimport GoodsColor from \"./GoodsColor\";\r\n\r\nconst GoodsLi = styled.li`\r\n    position: relative;\r\n    padding: 45px;    \r\n    background-color: #F8FAFC;\r\n    border-radius: 25px;\r\n    transition: filter 0.6s;\r\n\r\n    &:hover {\r\n        filter: drop-shadow(0px 4px 45px #C3D4E4);\r\n    }\r\n\r\n    &:hover ${ImgWrapper} img {\r\n        transform: rotate(-15deg) scale(1.4);\r\n        &:hover {\r\n            transform: none;\r\n            filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\r\n        }         \r\n    }\r\n`;\r\n\r\nconst GoodsTitle = styled.h3`\r\n    margin: 25px 0 0 0;\r\n    padding: 0;\r\n    font-weight: 500;\r\n    font-size: 24px;    \r\n    text-align: center;\r\n    color: #2C2C2C;\r\n`;\r\n\r\nconst GoodsDescr = styled.div`\r\n    margin: 10px 0 0 0;\r\n    padding: 0;\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n    font-weight: 400;\r\n    color: #2C2C2C;\r\n`;\r\n\r\nconst GoodsColorPriceWrapper = styled.div`    \r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    margin: 20px 0 0 0;\r\n    min-height: 45px;    \r\n`;\r\n\r\nconst GoodsPrice = styled.div`    \r\n    font-weight: 600;\r\n    font-size: 18px;    \r\n    color: #000000;\r\n`;\r\n\r\nconst CountButtonWrapper = styled.div`    \r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    min-height: 39px;\r\n    margin-top: 25px;\r\n    padding: 0 16px;\r\n`;\r\n\r\nconst NewLabelWrapper = styled.div`    \r\n    position: absolute;\r\n    top: 46px;\r\n    left: 31px;\r\n    z-index: 10;\r\n`;\r\n\r\nconst OnePlusOneLabelWrapper = styled.div`    \r\n    position: absolute;\r\n    top: 63px;\r\n    left: 31px;\r\n    z-index: 9;\r\n`;\r\n\r\nconst ComparationLabelWrapper = styled.div`    \r\n    position: absolute;\r\n    top: 35px;\r\n    right: 31px;\r\n    z-index: 10;\r\n`;\r\n\r\nconst GoodsItem = (props) => {    \r\n    const [isColorsVisible, setIsColorsVisible] = useState(false);\r\n    const itemData = props.itemData;\r\n\r\n    const price = props.itemData.prices[props.itemData.volume] * props.itemData.count;      \r\n\r\n    return (\r\n        <GoodsLi>\r\n            <GoodsImg\r\n                src={itemData.img}\r\n                alt={itemData.title}                \r\n                hidedSrc={itemData.hidedImg}                \r\n            />\r\n            <GoodsTitle>{itemData.title}</GoodsTitle>            \r\n            <GoodsDescr>{itemData.description}</GoodsDescr>  \r\n                      \r\n            <GoodsColorPriceWrapper>\r\n                <GoodsColor\r\n                    itemData={itemData}\r\n                    isColorsVisible={isColorsVisible}\r\n                    setIsColorsVisible={setIsColorsVisible}\r\n                    setItemColor={props.setItemColor}\r\n                />\r\n                <GoodsPrice>{price} грн</GoodsPrice>\r\n            </GoodsColorPriceWrapper>\r\n\r\n            <GoodsVolume\r\n                volume={itemData.volume}\r\n                availableVolumes={itemData.availableVolumes}\r\n                id={itemData.id}\r\n                setItemVolume={props.setItemVolume}\r\n            />\r\n            <CountButtonWrapper>\r\n                <GoodsCount\r\n                    id={itemData.id}\r\n                    count={itemData.count}\r\n                    maxCount={itemData.maxCount}\r\n                    setItemCount={props.setItemCount}\r\n                />\r\n                <Button>Купить</Button>\r\n            </CountButtonWrapper>\r\n            {itemData.isNew\r\n                ? <NewLabelWrapper>\r\n                    <NewLabel>New</NewLabel>\r\n                  </NewLabelWrapper>\r\n                : null\r\n            }\r\n            {itemData.isOnePlusOne\r\n                ? <OnePlusOneLabelWrapper>\r\n                    <OnePlusOneLabel>1+1</OnePlusOneLabel>\r\n                  </OnePlusOneLabelWrapper>\r\n                : null\r\n            }\r\n            \r\n            <ComparationLabelWrapper>\r\n                <ComparationLabel\r\n                    isInComparation={itemData.isInComparation}\r\n                    inComparationCount={props.inComparationCount}\r\n                    handleClick={props.toggleIsInComparation}\r\n                />\r\n            </ComparationLabelWrapper>\r\n        </GoodsLi>\r\n    );\r\n}\r\n\r\nexport default GoodsItem;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GoodsItem from \"./GoodsItem\";\r\n\r\nconst GoodsWrapper = styled.div`\r\n    max-width: 1800px;\r\n    padding: 5px;\r\n`;\r\n\r\nconst GoodsList = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0 auto;\r\n    display: grid;\r\n    gap: 35px;\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 573px));    \r\n    justify-content: center;    \r\n`;\r\n\r\nconst Goods = (props) => {\r\n    const [goods, setGoods] = useState([\r\n        {\r\n          id: 1,\r\n          title: `Шампунь`,\r\n          description: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco.`,\r\n          img: `img/shampoo1@2x.png`,\r\n          hidedImg: ``,\r\n          color: `Цвет`,\r\n          availableColors: [\r\n            'Желтый',\r\n            'Красный',\r\n            'Зеленый',\r\n            'Цвет4',\r\n            'Цвет5',\r\n            'Цвет6',\r\n            'Цвет7',\r\n            'Цвет8',\r\n          ],\r\n          volume: '100',\r\n          availableVolumes: [\r\n            '100',\r\n            '200',\r\n            '300',        \r\n          ],\r\n          prices: {\r\n            '100': 200,\r\n            '200': 400,\r\n            '300': 600, \r\n          },\r\n          count: 1,\r\n          maxCount: 9999,\r\n          isNew: true,\r\n          isOnePlusOne: false,\r\n          isInComparation: false\r\n        },\r\n        {\r\n          id: 2,\r\n          title: `Шампунь`,\r\n          description: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco.`,\r\n          img: `img/shampoo2@2x.png`,\r\n          hidedImg: `img/hovered-shampoo2@2x.png`,\r\n          color: `Цвет`,\r\n          availableColors: [\r\n            'Желтый',\r\n            'Красный',\r\n            'Зеленый',\r\n            'Цвет4',\r\n            'Цвет5',\r\n            'Цвет6',\r\n            'Цвет7',\r\n            'Цвет8',\r\n          ],\r\n          volume: '200',\r\n          availableVolumes: [\r\n            '100',\r\n            '200',\r\n            '300',        \r\n          ],\r\n          prices: {\r\n            '100': 200,\r\n            '200': 400,\r\n            '300': 600, \r\n          },\r\n          count: 2,\r\n          maxCount: 9999,\r\n          isNew: false,\r\n          isOnePlusOne: true,\r\n          isInComparation: true\r\n        },\r\n        {\r\n          id: 3,\r\n          title: `Шампунь`,\r\n          description: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco.`,\r\n          img: `img/shampoo3@2x.png`,\r\n          hidedImg: `img/hovered-shampoo3@2x.png`,\r\n          color: `Цвет`,\r\n          availableColors: [\r\n            'Желтый',\r\n            'Красный',\r\n            'Зеленый',\r\n            'Цвет4',\r\n            'Цвет5',\r\n            'Цвет6',\r\n            'Цвет7',\r\n            'Цвет8',\r\n          ],\r\n          volume: '300',\r\n          availableVolumes: [\r\n            '100',\r\n            '200',\r\n            '300',        \r\n          ],\r\n          prices: {\r\n            '100': 200,\r\n            '200': 400,\r\n            '300': 600, \r\n          },\r\n          count: 3,\r\n          maxCount: 9999,\r\n          isNew: true,\r\n          isOnePlusOne: true,\r\n          isInComparation: true\r\n        },\r\n      ]);\r\n\r\n    const inComparationCount = goods.reduce(\r\n        (accumulator, item) => {\r\n            if (item.isInComparation) {\r\n                accumulator++;\r\n            }\r\n            return accumulator;                \r\n        },\r\n        0\r\n    );\r\n\r\n    const toggleIsInComparation = (id) => {        \r\n        setGoods(state => {\r\n            const newState = state.map(item => {\r\n                if (item.id === id) {\r\n                    return {\r\n                        ...item,\r\n                        isInComparation: !item.isInComparation,\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            return newState;\r\n        });\r\n    }; \r\n\r\n    const setItemColor = (id, color) => {        \r\n        setGoods(state => {\r\n            const newState = state.map(item => {\r\n                if (item.id === id) {\r\n                    return {\r\n                        ...item,\r\n                        color\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            return newState;\r\n        });\r\n    }; \r\n    \r\n    const setItemVolume = (id, volume) => {        \r\n        setGoods(state => {\r\n            const newState = state.map(item => {\r\n                if (item.id === id) {\r\n                    return {\r\n                        ...item,\r\n                        volume\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    const setItemCount = (id, count) => {        \r\n        setGoods(state => {\r\n            const newState = state.map(item => {\r\n                if (item.id === id) {\r\n                    return {\r\n                        ...item,\r\n                        count\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    const goodsItems = goods.map( item => {\r\n        return (\r\n            <GoodsItem\r\n                key={item.id}\r\n                itemData={item}\r\n                inComparationCount={inComparationCount}\r\n                toggleIsInComparation={() => toggleIsInComparation(item.id)}\r\n                setItemColor={setItemColor}\r\n                setItemVolume={setItemVolume}\r\n                setItemCount={setItemCount}\r\n            />\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <GoodsWrapper>\r\n            <GoodsList>\r\n                {goodsItems}\r\n            </GoodsList>               \r\n        </GoodsWrapper>\r\n    );\r\n}\r\n\r\nexport default Goods;","import \"./App.css\";\nimport Goods from \"./components/Goods/Goods\";\n\nfunction App() {\n    return <Goods />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}